@ngdoc overview
@name Adding New Tags
@description

## Adding New Tags

Provide an `addFn` to directive [cork-input-tags](#/api/ng.cork.input-tags.corkInputTags).

Behaviour:
- when there are no search results a new tag will be added when user presses Enter

<pre>
$scope.tagOptions = {
    searchFn: function (terms) { ... },
    addFn: function (label) { ... }
};
</pre>

The `addFn` will be invoked with the user input and, as per defaults, should
return a tag object with `id` and `label` attributes (or a promise resolved with
the new tag).

<pre>
function add(label) {
    return {id: 3, label: label};
}
</pre>

As long as the `addFn` returns (or resolves with) a tag object, the tag will be
added to the model.

<doc:example module="app" height="400">
    <doc:source>
        <script>
        angular.module('app', ['ng.cork.input-tags'])
        .service('mockTagService', [
            function () {

                var mockTags = [{
                    id: 1,
                    label: 'Foo'
                }, {
                    id: 2,
                    label: 'Bar'
                }, {
                    id: 3,
                    label: 'Baz'
                }, {
                    id: 4,
                    label: 'Qux'
                }, {
                    id: 5,
                    label: 'Quux'
                },{
                    id: 6,
                    label: 'Lorem ipsum dolor sit amet'
                }];

                return {
                    search: function (terms) {
                        var ret = [];
                        terms = terms.toLowerCase();
                        for (var ix = 0; ix < mockTags.length; ix++) {
                            if (mockTags[ix].label.toLowerCase().indexOf(terms) !== -1) {
                                ret.push(mockTags[ix]);
                            }
                        }
                        return ret;
                    },
                    add: function (label) {
                        var newTag = {
                            id: mockTags.length + 1,
                            label: label
                        };
                        mockTags.push(newTag);
                        return newTag;
                    }
                };
            }
        ])
        .controller('exampleCtrl', [
            '$scope',
            'mockTagService',
            function ($scope, mockTagService) {
                $scope.tags = [];
                $scope.tagOptions = {
                    searchFn: mockTagService.search,
                    addFn: mockTagService.add
                };
            }
        ]);
        </script>
        <style>
        .container {
           padding: 10px;
        }
        label {
            display: block;
            margin-bottom: 10px;
        }
        .form-group {
            padding-bottom: 20px;
            margin-bottom: 20px;
            border-bottom: 1px dashed black;
        }
        .meta {
            padding: 10px;
            background: #efefef;
        }
        </style>
        <div data-ng-controller="exampleCtrl" class="container">
            <div class="form-group">
                <label>Tags (tip: foo, bar, baz, qux)</label>
                <div cork-input-tags cork-options="tagOptions" ng-model="tags"></div>
            </div>
            <div class="meta">
                <strong>model:</strong> {{tags}}
            </div>
        </div>
    </doc:source>
</doc:example>
