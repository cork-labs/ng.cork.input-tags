@ngdoc overview
@name Detaching Tags
@description

## Detaching Tags

If you prefer to display the tag list on your own - and have the freedom to
place it anywhere in your dom - you can force it not display using the
`display.tags: 'hide'` option of the
[cork-input-tags](#/api/ng.cork.input-tags.corkInputTags) directive and then
print your own [cork-input-tags-tags](#/api/ng.cork.input-tags.corkInputTagsTags).

**NOTE:** keyboard navigation between input and tags (via left arrow or backspace
keys) and form tags to input (via right arrow, escape keys and after all are
deleted) **is disabled** if tags are detached from input.

> Displaying tags on your own / elsewhere in the DOM

With `display.tags: 'hide'` - model tags are not displayed by [cork-input-tags](#/api/ng.cork.input-tags.corkInputTags).

<pre>
$scope.tagOptions = {
    searchFn: mockTagService.search,
    display: {
        tags: 'hide'
    }
};
</pre>

Print the [cork-input-tags-tags](#/api/ng.cork.input-tags.corkInputTagsTags) directive
and pass the same `corkUuid` to both.

<pre>
<div cork-input-tags cork-uuid="example1" cork-options="tagOptions" ng-model="tags"></div>
....
<div cork-input-tags-tags cork-uuid="example1" cork-options="tagOptions" ng-model="tags"></div>
</pre>

<doc:example module="app" height="400">
    <doc:source>
        <script>
        angular.module('app', ['ng.cork.input-tags'])
        .service('mockTagService', [
            function () {

                var mockTags = [{
                    id: 1,
                    label: 'Foo'
                }, {
                    id: 2,
                    label: 'Bar'
                }, {
                    id: 3,
                    label: 'Baz'
                }, {
                    id: 4,
                    label: 'Qux'
                }, {
                    id: 5,
                    label: 'Quux'
                },{
                    id: 6,
                    label: 'Lorem ipsum dolor sit amet'
                }];

                return {
                    search: function (terms) {
                        var ret = [];
                        terms = terms.toLowerCase();
                        for (var ix = 0; ix < mockTags.length; ix++) {
                            if (mockTags[ix].label.toLowerCase().indexOf(terms) !== -1) {
                                ret.push(mockTags[ix]);
                            }
                        }
                        return ret;
                    }
                };
            }
        ])
        .controller('exampleCtrl', [
            '$scope',
            'mockTagService',
            function ($scope, mockTagService) {
                $scope.tags = [];
                $scope.tagOptions = {
                    searchFn: mockTagService.search,
                    display: {
                        tags: 'hide'
                    }
                };
            }
        ]);
        </script>
        <style>
        .container {
           padding: 10px;
        }
        label {
            display: block;
            margin-bottom: 10px;
        }
        .form-group {
            padding-bottom: 20px;
            margin-bottom: 20px;
            border-bottom: 1px dashed black;
        }
        .meta {
            padding: 10px 0;
            background: #efefef;
        }
        </style>
        <div data-ng-controller="exampleCtrl" class="container">
            <div class="form-group">
                <label>Tags (tip: foo, bar, baz, qux)</label>
                <div cork-input-tags cork-uuid="example1" cork-options="tagOptions" ng-model="tags"></div>
            </div>
            <div class="meta">
                <strong>model:</strong> {{tags}}
            </div>
            <div class="tags">
                <h3>Selected Tags</h3>
                <div cork-input-tags-tags cork-uuid="example1" cork-options="tagOptions" ng-model="tags"></div>
            </div>
        </div>
    </doc:source>
</doc:example>
